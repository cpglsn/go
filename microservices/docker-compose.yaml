version: '3'

services:

  front-end:
    container_name: front-end
    build:
      context: ./front-end
    restart: always
    ports:
      - "8001:80"
    deploy:
      mode: replicated
      replicas: 1

  broker-service:
    container_name: broker-service
    build:
      context: ./broker-service
    restart: always
    ports:
      - "8002:80"
    deploy:
      mode: replicated
      replicas: 1

  authentication-service:
    container_name: authentication-service
    build:
      context: ./authentication-service
    restart: always
    ports:
      - "8003:80"
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - .env


  postgres:
    image: postgres:14
    container_name: postgresql
    restart: unless-stopped
    ports:
      - 5432:5432
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s  
    command: postgres -c 'max_connections=1000'

  adminer:
    image: adminer
    container_name: adminer
    restart: unless-stopped
    depends_on:
      - postgres
    ports:
      - 8080:8080
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"
